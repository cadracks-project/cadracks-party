#!/usr/bin/env python
# coding: utf-8

# Copyright 2018-2019 Guillaume Florent, Thomas Paviot, Bernard Uguen

# This file is part of cadracks-party.
#
# cadracks-party is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# cadracks-party is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cadracks-party.  If not, see <https://www.gnu.org/licenses/>.

r"""Example use of the library.json file to create geometry_scripts 
and cad files"""

import logging
from os.path import join
from os import getcwd
from argparse import ArgumentParser

from cadracks_party.library_use import generate

parser = ArgumentParser(description="Crate scripts and CAD files from the "
                                    "library.json")
parser.add_argument('-v', '--verbose',
                    action='store_true',
                    help="Show info messages")

parser.add_argument('-vv', '--veryverbose',
                    action='store_true',
                    help="Show debug messages")

parser.add_argument('-s', '--steps',
                    action='store_true',
                    help="Generate STEP files")

parser.add_argument('-t', '--stls',
                    action='store_true',
                    help="Generate STL files")

parser.add_argument('-w', '--htmls',
                    action='store_true',
                    help="Generate HTML files")

args = parser.parse_args()

trace_level = logging.ERROR

if args.verbose is True:
    trace_level = logging.INFO

if args.veryverbose is True:
    trace_level = logging.INFO

logger = logging.getLogger(__name__)

logging.basicConfig(level=trace_level,
                    format='%(asctime)s :: %(levelname)6s :: %(module)20s :: '
                           '%(lineno)3d :: %(message)s')

generate(json_library_filepath=join(getcwd(), "library.json"),
         generate_steps=args.steps,
         generate_stls=args.stls,
         generate_htmls=args.htmls)
