#!/usr/bin/env python
# coding: utf-8

r"""Script that creates the library.json file from its template"""

import logging
from os import getcwd
from os.path import join
from argparse import ArgumentParser

from cadracks_party.library_creation import autocreate_library
from cadracks_party.library_checking import check_all

parser = ArgumentParser(description="Create the library.json file of the parts "
                                    "library from its template")
parser.add_argument('-v', '--verbose',
                    action='store_true',
                    help="Show info messages")

parser.add_argument('-vv', '--veryverbose',
                    action='store_true',
                    help="Show debug messages")

args = parser.parse_args()

trace_level = logging.ERROR

if args.verbose is True:
    trace_level = logging.INFO

if args.veryverbose is True:
    trace_level = logging.INFO

logger = logging.getLogger(__name__)

logging.basicConfig(level=trace_level,
                    format='%(asctime)s :: %(levelname)6s :: %(module)20s :: '
                           '%(lineno)3d :: %(message)s')

autocreate_library(join(getcwd(), "library_template.json"))
library_ok_list, _ = check_all(join(getcwd(), "library.json"))
for entry in library_ok_list:
    # assert entry is True
    if entry is False:
        raise AssertionError("entry expected to be True, but is False")
